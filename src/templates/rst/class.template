<?php
/**
 * Copyright 2010-12 Nickolas Whiting. All rights reserved.
 * Use of this source code is governed by the Apache 2 license
 * that can be found in the LICENSE file.
 */

switch(true) {
    case $class->get('trait'):
        $type = 'Trait';
        break;
    case $class->get('interface'):
        $type = 'Interface';
        break;
    default:
        $type = 'Class';
        break;
}

$type .= ' - ' . str_replace("\\", "\\\\", $class->get('name')); 

echo $type.PHP_EOL;
echo str_repeat(RST_H1, strlen($type)).PHP_EOL.PHP_EOL;

$doc = $class->get('doc');

if (is_array($doc)) {
    echo sprintf(
        '%s',
        str_replace("\n", "\n", trim($doc['description']))
    ).PHP_EOL.PHP_EOL;
    if (is_array($doc['tags']) && count($tags) != 0) {
        echo $this->template('tags.template', ['tags' => $doc['tags']]);
    }
}

if (is_array($class->get('methods')) && count($class->get('methods')) > 0) {
    // Methods
    $str = 'Methods';
    echo $str.PHP_EOL;
    echo str_repeat(RST_H3, strlen($str)).PHP_EOL.PHP_EOL; 
    foreach ($class->get('methods') as $_method) {
        echo $this->template('method.template', [
            'class'  => $class,
            'method' => $_method
        ]);
    }
}

if (is_array($class->get('const')) && count($class->get('const')) > 0) {
    echo $this->template('constant.template', [
        'constant' => $class->get('const')
    ]);
}
?>
